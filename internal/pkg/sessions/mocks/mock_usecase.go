// Code generated by MockGen. DO NOT EDIT.
// Source: liokor_mail/internal/pkg/sessions (interfaces: SessionsUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	common "liokor_mail/internal/pkg/common"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionsUseCase is a mock of SessionsUseCase interface.
type MockSessionsUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockSessionsUseCaseMockRecorder
}

// MockSessionsUseCaseMockRecorder is the mock recorder for MockSessionsUseCase.
type MockSessionsUseCaseMockRecorder struct {
	mock *MockSessionsUseCase
}

// NewMockSessionsUseCase creates a new mock instance.
func NewMockSessionsUseCase(ctrl *gomock.Controller) *MockSessionsUseCase {
	mock := &MockSessionsUseCase{ctrl: ctrl}
	mock.recorder = &MockSessionsUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionsUseCase) EXPECT() *MockSessionsUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSessionsUseCase) Create(arg0 common.Session) (common.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(common.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSessionsUseCaseMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionsUseCase)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockSessionsUseCase) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSessionsUseCaseMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSessionsUseCase)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockSessionsUseCase) Get(arg0 string) (common.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(common.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionsUseCaseMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionsUseCase)(nil).Get), arg0)
}
